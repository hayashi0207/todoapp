{"ast":null,"code":"var _jsxFileName = \"/Users/hayashiryuunosuke/Public/workspace/todoapp/frontend/src/components/Tasks.tsx\";\nimport React from \"react\";\nimport Buttons from \"./IconButtons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  }\n});\n\nconst Tasks = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }),\n    \"aria-label\": \"Expand\",\n    \"aria-controls\": \"additional-actions1-content\",\n    id: \"additional-actions1-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    \"aria-label\": \"Acknowledge\",\n    onClick: event => event.stopPropagation(),\n    onFocus: event => event.stopPropagation(),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }\n    }),\n    label: \"I acknowledge that I should stop the click event propagation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"The click event of the nested action will propagate up and expand the accordion unless you explicitly stop it.\")))), /*#__PURE__*/React.createElement(\"li\", {\n    key: props.task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, props.task.title, props.task.content, /*#__PURE__*/React.createElement(Buttons, {\n    editedTask: props.task,\n    isType: \"edit\",\n    crudTask: () => props.setEditedTask(props.task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Buttons, {\n    editedTask: props.task,\n    isType: \"delete\",\n    crudTask: () => props.deleteTask(props.task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/hayashiryuunosuke/Public/workspace/todoapp/frontend/src/components/Tasks.tsx"],"names":["React","Buttons","makeStyles","Accordion","AccordionSummary","AccordionDetails","Checkbox","FormControlLabel","Typography","ExpandMoreIcon","useStyles","root","width","Tasks","props","classes","event","stopPropagation","task","id","title","content","setEditedTask","deleteTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADqB,CAAD,CAA5B;;AAeA,MAAMC,KAAsB,GAAIC,KAAD,IAAW;AACxC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,UAAU,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd;AAEE,kBAAW,QAFb;AAGE,qBAAc,6BAHhB;AAIE,IAAA,EAAE,EAAC,4BAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,gBAAD;AACE,kBAAW,aADb;AAEE,IAAA,OAAO,EAAGK,KAAD,IAAWA,KAAK,CAACC,eAAN,EAFtB;AAGE,IAAA,OAAO,EAAGD,KAAD,IAAWA,KAAK,CAACC,eAAN,EAHtB;AAIE,IAAA,OAAO,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJX;AAKE,IAAA,KAAK,EAAC,8DALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,eAeE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHADF,CAfF,CADF,CADF,eAyBE;AAAI,IAAA,GAAG,EAAEH,KAAK,CAACI,IAAN,CAAWC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACI,IAAN,CAAWE,KADd,EAEGN,KAAK,CAACI,IAAN,CAAWG,OAFd,eAGE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAEP,KAAK,CAACI,IADpB;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,QAAQ,EAAE,MAAMJ,KAAK,CAACQ,aAAN,CAAoBR,KAAK,CAACI,IAA1B,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAQE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAEJ,KAAK,CAACI,IADpB;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,EAAE,MAAMJ,KAAK,CAACS,UAAN,CAAiBT,KAAK,CAACI,IAAN,CAAWC,EAA5B,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAzBF,CADF;AA0CD,CA5CD;;AA8CA,eAAeN,KAAf","sourcesContent":["import React from \"react\";\nimport Buttons from \"./IconButtons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n});\ntype Props = {\n  task: {\n    id: string;\n    title: string;\n    content: string;\n  };\n  setEditedTask: Function;\n  deleteTask: Function;\n};\n\nconst Tasks: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.root}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-label=\"Expand\"\n            aria-controls=\"additional-actions1-content\"\n            id=\"additional-actions1-header\"\n          >\n            <FormControlLabel\n              aria-label=\"Acknowledge\"\n              onClick={(event) => event.stopPropagation()}\n              onFocus={(event) => event.stopPropagation()}\n              control={<Checkbox />}\n              label=\"I acknowledge that I should stop the click event propagation\"\n            />\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography color=\"textSecondary\">\n              The click event of the nested action will propagate up and expand\n              the accordion unless you explicitly stop it.\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n      <li key={props.task.id}>\n        {props.task.title}\n        {props.task.content}\n        <Buttons\n          editedTask={props.task}\n          isType=\"edit\"\n          crudTask={() => props.setEditedTask(props.task)}\n        />\n        <Buttons\n          editedTask={props.task}\n          isType=\"delete\"\n          crudTask={() => props.deleteTask(props.task.id)}\n        />\n      </li>\n    </div>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}