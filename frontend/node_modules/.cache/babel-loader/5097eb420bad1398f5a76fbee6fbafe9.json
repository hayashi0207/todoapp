{"ast":null,"code":"var _jsxFileName = \"/Users/hayashiryuunosuke/Public/workspace/todoapp/frontend/src/components/Api.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Tasks from \"./Tasks\";\nimport Form from \"./Form\";\nimport Buttons from \"./Buttons\";\n\nconst Api = () => {\n  const [tasks, setTasks] = useState([]);\n  const [editedTask, setEditedTask] = useState({\n    id: \"\",\n    title: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/api/todolist/\", {\n      headers: {\n        Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\"\n      }\n    }).then(res => {\n      setTasks(res.data);\n    });\n  }, []);\n\n  const createTask = task => {\n    const sendTask = {\n      title: task.title,\n      content: task.content\n    };\n    axios.post(\"http://127.0.0.1:8000/api/todolist/\", sendTask, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\"\n      }\n    }).then(res => {\n      setTasks([...tasks, res.data]);\n      setEditedTask({\n        id: \"\",\n        title: \"\",\n        content: \"\"\n      });\n    });\n  };\n\n  const updateTask = task => {\n    axios.put(`http://127.0.0.1:8000/api/todolist/${task.id}/`, task, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\"\n      }\n    }).then(res => {\n      setTasks(tasks.map(task => task.id === editedTask.id ? res.data : task));\n      setEditedTask({\n        id: \"\",\n        title: \"\",\n        content: \"\"\n      });\n    });\n  };\n\n  const deleteTask = id => {\n    axios.delete(`http://127.0.0.1:8000/api/todolist/${id}/`, {\n      headers: {\n        Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\"\n      }\n    }).then(res => {\n      setTasks(tasks.filter(task => task.id !== id));\n\n      if (editedTask.id === id) {\n        setEditedTask({\n          id: \"\",\n          title: \"\",\n          content: \"\"\n        });\n      }\n    });\n  };\n\n  const handleInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setEditedTask({ ...editedTask,\n      [name]: value\n    });\n  };\n\n  const handleContentChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setEditedTask({ ...editedTask,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    editedTask: editedTask,\n    handleInputChange: handleInputChange,\n    handleContentChange: handleContentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), editedTask.id ? /*#__PURE__*/React.createElement(Buttons, {\n    editedTask: editedTask,\n    text: \"\\u66F4\\u65B0\",\n    crudTask: () => updateTask(editedTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Buttons, {\n    editedTask: editedTask,\n    text: \"\\u8FFD\\u52A0\",\n    crudTask: () => createTask(editedTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(Tasks, {\n    task: task,\n    setEditedTask: () => setEditedTask(task),\n    deleteTask: () => deleteTask(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Api;","map":{"version":3,"sources":["/Users/hayashiryuunosuke/Public/workspace/todoapp/frontend/src/components/Api.tsx"],"names":["React","useState","useEffect","axios","Tasks","Form","Buttons","Api","tasks","setTasks","editedTask","setEditedTask","id","title","content","get","headers","Authorization","then","res","data","createTask","task","sendTask","post","updateTask","put","map","deleteTask","delete","filter","handleInputChange","e","name","target","value","handleContentChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Tasks from \"./Tasks\";\nimport Form from \"./Form\";\nimport Buttons from \"./Buttons\";\n\nconst Api: React.FC = () => {\n  interface Task {\n    id: string;\n    title: string;\n    content: string;\n  }\n  interface SendTask {\n    title: string;\n    content: string;\n  }\n\n  const [tasks, setTasks] = useState<any>([]);\n  const [editedTask, setEditedTask] = useState<Task>({\n    id: \"\",\n    title: \"\",\n    content: \"\",\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:8000/api/todolist/\", {\n        headers: {\n          Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\",\n        },\n      })\n      .then((res) => {\n        setTasks(res.data);\n      });\n  }, []);\n  const createTask = (task: Task) => {\n    const sendTask: SendTask = {\n      title: task.title,\n      content: task.content,\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/api/todolist/\", sendTask, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\",\n        },\n      })\n      .then((res) => {\n        setTasks([...tasks, res.data]);\n        setEditedTask({ id: \"\", title: \"\", content: \"\" });\n      });\n  };\n\n  const updateTask = (task: Task) => {\n    axios\n      .put(`http://127.0.0.1:8000/api/todolist/${task.id}/`, task, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\",\n        },\n      })\n      .then((res) => {\n        setTasks(\n          tasks.map((task: Task) =>\n            task.id === editedTask.id ? res.data : task\n          )\n        );\n        setEditedTask({ id: \"\", title: \"\", content: \"\" });\n      });\n  };\n\n  const deleteTask = (id: string) => {\n    axios\n      .delete(`http://127.0.0.1:8000/api/todolist/${id}/`, {\n        headers: {\n          Authorization: \"Token c1b7a43871127d3e4e9b88768d9bc18180be80a8\",\n        },\n      })\n      .then((res) => {\n        setTasks(tasks.filter((task: Task) => task.id !== id));\n        if (editedTask.id === id) {\n          setEditedTask({ id: \"\", title: \"\", content: \"\" });\n        }\n      });\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setEditedTask({ ...editedTask, [name]: value });\n  };\n\n  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setEditedTask({ ...editedTask, [name]: value });\n  };\n\n  return (\n    <div>\n      <Form\n        editedTask={editedTask}\n        handleInputChange={handleInputChange}\n        handleContentChange={handleContentChange}\n      />\n      {editedTask.id ? (\n        <Buttons\n          editedTask={editedTask}\n          text=\"更新\"\n          crudTask={() => updateTask(editedTask)}\n        />\n      ) : (\n        <Buttons\n          editedTask={editedTask}\n          text=\"追加\"\n          crudTask={() => createTask(editedTask)}\n        />\n      )}\n      <ul>\n        {tasks.map((task: Task) => (\n          <Tasks\n            task={task}\n            setEditedTask={() => setEditedTask(task)}\n            deleteTask={() => deleteTask(task.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}