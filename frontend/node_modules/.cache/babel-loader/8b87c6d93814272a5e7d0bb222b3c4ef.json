{"ast":null,"code":"var _jsxFileName = \"/Users/hayashiryuunosuke/Public/workspace/todoapp/frontend/src/components/Tasks.tsx\";\nimport React from \"react\";\nimport IconButtons from \"./IconButtons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nconst useStyles = makeStyles({\n  checkbox: {\n    color: \"#3f51b5\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(63,81,181,0.1)\"\n    }\n  }\n});\n\nconst Tasks = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: props.task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }\n    }),\n    \"aria-label\": \"Expand\",\n    \"aria-controls\": \"additional-actions1-content\",\n    id: \"additional-actions1-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    \"aria-label\": \"Acknowledge\",\n    onClick: event => event.stopPropagation(),\n    onFocus: event => event.stopPropagation(),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: classes.checkbox,\n      style: {\n        color: \"primary\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }),\n    label: props.task.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, props.task.content)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButtons, {\n    editedTask: props.task,\n    isType: \"edit\",\n    crudTask: () => props.setEditedTask(props.task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButtons, {\n    editedTask: props.task,\n    isType: \"delete\",\n    crudTask: () => props.deleteTask(props.task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/hayashiryuunosuke/Public/workspace/todoapp/frontend/src/components/Tasks.tsx"],"names":["React","IconButtons","makeStyles","Accordion","AccordionSummary","AccordionDetails","Checkbox","FormControlLabel","Typography","ExpandMoreIcon","useStyles","checkbox","color","backgroundColor","Tasks","props","classes","task","id","event","stopPropagation","title","content","setEditedTask","deleteTask"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IconButtons from \"./IconButtons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles({\n  checkbox: {\n    color: \"#3f51b5\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(63,81,181,0.1)\",\n    },\n  },\n});\n\ntype Props = {\n  task: {\n    id: string;\n    title: string;\n    content: string;\n  };\n  setEditedTask: Function;\n  deleteTask: Function;\n};\n\nconst Tasks: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  return (\n    <div key={props.task.id}>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions1-content\"\n          id=\"additional-actions1-header\"\n        >\n          <FormControlLabel\n            aria-label=\"Acknowledge\"\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n            control={\n              <Checkbox\n                className={classes.checkbox}\n                style={{ color: \"primary\" }}\n              />\n            }\n            label={props.task.title}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography color=\"textSecondary\">\n            <div className=\"task-content\">{props.task.content}</div>\n          </Typography>\n          <div className=\"icon-buttons\">\n            <IconButtons\n              editedTask={props.task}\n              isType=\"edit\"\n              crudTask={() => props.setEditedTask(props.task)}\n            />\n          </div>\n          <div className=\"icon-buttons\">\n            <IconButtons\n              editedTask={props.task}\n              isType=\"delete\"\n              crudTask={() => props.deleteTask(props.task.id)}\n            />\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}